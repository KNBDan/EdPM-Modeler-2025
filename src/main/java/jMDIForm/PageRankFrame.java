/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jMDIForm;

import java.awt.Button;
import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
//import jMDIForm.jMDIFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author oppew
 */
public class PageRankFrame extends javax.swing.JFrame {

    /**
     * Creates new form PageRankFrame
     */
    public PageRankFrame() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    
    Boolean isCalculation = false;
    DefaultTableModel ranks;
    DefaultTableModel calculations;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SwitchButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        PageRankTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(900, 500));

        SwitchButton.setText("Show calculations");
        SwitchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SwitchButtonActionPerformed(evt);
            }
        });

        PageRankTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(PageRankTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SwitchButton)
                .addContainerGap())
            .addComponent(jScrollPane4)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SwitchButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SwitchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SwitchButtonActionPerformed
        isCalculation = !isCalculation;
        if (isCalculation)
        {
            SwitchButton.setText("Show ranks");
            PageRankTable.setModel(calculations);
            //this.setSize(900, 500);
        }
        else
        {
            SwitchButton.setText("Show calculations");
            PageRankTable.setModel(ranks);
            //this.setSize(250, 450);
        }
    }//GEN-LAST:event_SwitchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PageRankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PageRankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PageRankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PageRankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PageRankFrame().setVisible(true);
            }
        });
    }
    
    public void displayMatrix(double[][] matrix, String[] columnNames) {
        String[][] tableData = new String[matrix.length][matrix[0].length];
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                tableData[i][j] = String.format("%.6f", matrix[i][j]);
            }
        }
        
        calculations = new DefaultTableModel(tableData, columnNames);
        
        String[][] rankMatrix = new String[columnNames.length][2];
        String[] names = new String[] {"Name", "Rank"};
        
        List<Map.Entry<String, Double>> moduls = new ArrayList<>();
        String[] values = new String[columnNames.length];
        for (int i = 0; i < values.length; i++)
        {
            values[i] = tableData[tableData.length-1][i].replace(",", ".");
        }
        for (int i = 0; i < columnNames.length; i++)
        {
            moduls.add(new AbstractMap.SimpleEntry<String, Double>(columnNames[i], Double.valueOf(values[i])));
        }
        
        moduls.sort(Comparator.comparingDouble(Map.Entry::getValue));
        moduls = moduls.reversed();
        
        rankMatrix[0][0] = moduls.get(0).getKey();
        rankMatrix[0][1] = "1";
        int rank = 1;
        for (int i = 1; i < columnNames.length; i++)
        {
            if (!moduls.get(i).getValue().toString().equals(moduls.get(i-1).getValue().toString()))
                rank++;
            rankMatrix[i][0] = moduls.get(i).getKey();
            rankMatrix[i][1] = String.valueOf(rank);
        }
        
        ranks = new DefaultTableModel(rankMatrix, names);
        
        PageRankTable.setModel(ranks);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PageRankTable;
    private javax.swing.JButton SwitchButton;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
